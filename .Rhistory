(64/368)-(73/363)
exp(-0.153)
137/731
exp(-1.9634)/(1+exp(-1.9634))
7/12
1-exp(-(0.7/1000)*5)
1+2+2+2+1+3+1+2+2+3+3+3+3+3+3
1+2+2+2+1+3+1+2+2+3+3+3+3+3
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- within(c1, rm(rm_c1))
c1.f <- c1[-rm_c1]
c1.f
c1.sample1 <- sample(c1.f, 5)
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- c1[-rm_c1]
set.seed(100)
(c1.sample1 <- sample(c1.f, 5))
set.seed(101)
(c1.sample2 <- sample(c1.f, 5))
(c1.sample1 <- sort(sample(c1.f, 5)))
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- c1[-rm_c1]
set.seed(100)
(c1.sample1 <- sort(sample(c1.f, 5)))
set.seed(101)
(c1.sample2 <- sort(sample(c1.f, 5)))
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- c1[-rm_c1]
set.seed(100)
(c1.sample1 <- sort(sample(c1.f, 5)))
set.seed(1000)
(c1.sample2 <- sort(sample(c1.f, 5)))
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- c1[-rm_c1]
set.seed(100)
(c1.sample1 <- sort(sample(c1.f, 5)))
set.seed(101)
(c1.sample2 <- sort(sample(c1.f, 5)))
set.seed(100)
(c1.sample1 <- sort(sample(c1.f, 5)))
set.seed(356)
(c1.sample2 <- sort(sample(c1.f, 5)))
set.seed(100)
(c1.sample1 <- sort(sample(c1.f, 5)))
set.seed(489)
(c1.sample2 <- sort(sample(c1.f, 5)))
set.seed(100)
(c1.sample1 <- sort(sample(c1.f, 5)))
set.seed(296)
(c1.sample2 <- sort(sample(c1.f, 5)))
c2 <- seq(35:75)
rm_c2 <- c(39,40,58)
c2.f <- c2[-rm_c2]
set.seed(100)
(c2.sample1 <- sort(sample(c2.f, 5)))
set.seed(296)
(c2.sample2 <- sort(sample(c2.f, 5)))
(c1.sample1 <- sort(c1.f[sample(1:length(c1.f), 5)]))
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- c1[-rm_c1]
set.seed(100)
(c1.sample1 <- sort(c1.f[sample(1:length(c1.f), 5)]))
set.seed(296)
(c1.sample2 <- sort(c1.f[sample(1:length(c1.f), 5)]))
c2 <- seq(35:75)
rm_c2 <- c(39,40,58)
c2.f <- c2[-rm_c2]
set.seed(100)
(c2.sample1 <- sort(c2.f[sample(1:length(c2.f), 5)]))
set.seed(296)
(c2.sample1 <- sort(c2.f[sample(1:length(c2.f), 5)]))
c2 <- seq(35:75)
rm_c2 <- c(39,40,58)
c2.f <- c2[-rm_c2]
set.seed(100)
(c2.sample1 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
set.seed(296)
(c2.sample2 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
as.character(c1.f)
c1.f2 <- as.character(c1.f)
set.seed(100)
(c1.sample1 <- sort(c1.f2[sample(1:length(c1.f2), 5)]))
c2 <- seq(35:75)
rm_c2 <- c(39,40,58)
c2.f <- c2[-rm_c2]
c2.f2 <- as.character(c2.f2)
c2.f2 <- as.character(c2.f)
set.seed(100)
(c2.sample1 <- sort(c2.f2[sample(1:length(c2.f2), size=5)]))
c2.f2
c2.f
help(seq)
c2 <- seq(from=35,to=75)
c2
c2 <- seq(from=35,to=75)
rm_c2 <- c(39,40,58)
c2.f <- c2[-rm_c2]
set.seed(100)
(c2.sample1 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
set.seed(296)
(c2.sample2 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- c1[-rm_c1]
set.seed(100)
(c1.sample1 <- sort(c1.f[sample(1:length(c1.f), 5)]))
set.seed(296)
(c1.sample2 <- sort(c1.f[sample(1:length(c1.f), 5)]))
c2 <- seq(from=35,to=75)
rm_c2 <- c(39,40,58)
c2.f <- c2[-rm_c2]
set.seed(100)
(c2.sample1 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
set.seed(296)
(c2.sample2 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
c2.f
c2 <- seq(from=35,to=75)
rm_c2 <- c(39,40,58)
c2.f <- c2[-rm_c2]
c2.f
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- c1[!(c1 %in% rm_c1)]
c1.f
c2 <- seq(from=35,to=75)
rm_c2 <- c(39,40,58)
c2.f <- c2[!(c2 %in% rm_c2)]
c2.f
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- c1[!(c1 %in% rm_c1)]
set.seed(100)
(c1.sample1 <- sort(c1.f[sample(1:length(c1.f), 5)]))
set.seed(296)
(c1.sample2 <- sort(c1.f[sample(1:length(c1.f), 5)]))
c2 <- seq(from=35,to=75)
rm_c2 <- c(39,40,58)
c2.f <- c2[!(c2 %in% rm_c2)]
set.seed(100)
(c2.sample1 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
set.seed(296)
(c2.sample2 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
c3 <- seq(from=76,to=142)
rm_c3 <- seq(from=103,to=106)
c3.f <- c3[!(c3 %in% rm_c3)]
c3.f
set.seed(100)
(c3.sample1 <- sort(c3.f[sample(1:length(c3.f), size=5)]))
set.seed(296)
(c3.sample2 <- sort(c3.f[sample(1:length(c3.f), size=5)]))
(c2.sample1 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
set.seed(296)
(c2.sample2 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
set.seed(100)
(c2.sample1 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
set.seed(296)
(c2.sample2 <- sort(c2.f[sample(1:length(c2.f), size=5)]))
set.seed(100)
(c3.sample1 <- sort(c3.f[sample(1:length(c3.f), size=5)]))
set.seed(296)
(c3.sample2 <- sort(c3.f[sample(1:length(c3.f), size=5)]))
c4 <- seq(from=150,to=235)
rm_c4 <- c(seq(from=186,to=189),202,204,205,207,213)
c4.f <- c4[!(c4 %in% rm_c4)]
set.seed(100)
(c4.sample1 <- sort(c4.f[sample(1:length(c4.f), size=5)]))
set.seed(296)
(c4.sample2 <- sort(c4.f[sample(1:length(c4.f), size=5)]))
c5 <- seq(from=236,to=289)
rm_c5 <- seq(from=240,to=243)
c5.f <- c5[!(c5 %in% rm_c5)]
set.seed(100)
(c5.sample1 <- sort(c5.f[sample(1:length(c5.f), size=5)]))
set.seed(296)
(c5.sample2 <- sort(c5.f[sample(1:length(c5.f), size=5)]))
c6 <- seq(from=290,to=365)
set.seed(100)
(c6.sample1 <- sort(c6[sample(1:length(c6), size=5)]))
set.seed(296)
(c6.sample2 <- sort(c6[sample(1:length(c6), size=5)]))
c7 <- seq(from=366,to=516)
rm_c7 <- c(382,383,410,411,440,441,442,483,490,513,514)
c7.f <- c7[!(c7 %in% rm_c7)]
set.seed(100)
(c7.sample1 <- sort(c7.f[sample(1:length(c7.f), size=5)]))
set.seed(296)
(c7.sample2 <- sort(c7.f[sample(1:length(c7.f), size=5)]))
c8 <- seq(from=524,to=559)
set.seed(100)
(c8.sample1 <- sort(c8[sample(1:length(c8), size=5)]))
set.seed(296)
(c8.sample2 <- sort(c8[sample(1:length(c8), size=5)]))
c9 <- seq(from=559,to=596)
set.seed(100)
(c9.sample1 <- sort(c9[sample(1:length(c9), size=5)]))
set.seed(296)
(c9.sample2 <- sort(c9[sample(1:length(c9), size=5)]))
c10 <- seq(from=1,to=141)
rm_c10 <- c(32,33,34,63,64,128,129,136,137)
c10.f <- c10[!(c10 %in% rm_c10)]
set.seed(100)
(c10.sample1 <- sort(c10.f[sample(1:length(c10.f), size=5)]))
set.seed(296)
(c10.sample2 <- sort(c10.f[sample(1:length(c10.f), size=5)]))
c11 <- seq(from=1,to=53)
rm_c11 <- c(42)
c11.f <- c11[!(c11 %in% rm_c11)]
set.seed(100)
(c11.sample1 <- sort(c11.f[sample(1:length(c11.f), size=5)]))
set.seed(296)
(c11.sample2 <- sort(c11.f[sample(1:length(c11.f), size=5)]))
c12 <- seq(from=64,to=89)
rm_c12 <- c(72,73,74,84,85)
c12.f <- c12[!(c12 %in% rm_c12)]
set.seed(100)
(c12.sample1 <- sort(c12.f[sample(1:length(c12.f), size=5)]))
set.seed(296)
(c12.sample2 <- sort(c12.f[sample(1:length(c12.f), size=5)]))
c13 <- seq(from=94,to=161)
rm_c13 <- c(seq(124:129),148,149)
c13.f <- c13[!(c13 %in% rm_c13)]
set.seed(100)
(c13.sample1 <- sort(c13.f[sample(1:length(c13.f), size=5)]))
set.seed(296)
(c13.sample2 <- sort(c13.f[sample(1:length(c13.f), size=5)]))
c14 <- seq(from=175,to=222)
set.seed(100)
(c14.sample1 <- sort(c14[sample(1:length(c14), size=5)]))
set.seed(296)
(c14.sample2 <- sort(c14[sample(1:length(c14), size=5)]))
c15 <- seq(from=228,to=305)
rm_c15 <- c(261,267,268,270,271,301)
c15.f <- c15[!(c15 %in% rm_c15)]
set.seed(100)
(c15.sample1 <- sort(c15.f[sample(1:length(c15.f), size=5)]))
set.seed(296)
(c15.sample2 <- sort(c15.f[sample(1:length(c15.f), size=5)]))
c16 <- seq(from=310,to=392)
set.seed(100)
(c16.sample1 <- sort(c16[sample(1:length(c16), size=5)]))
set.seed(296)
(c16.sample2 <- sort(c16[sample(1:length(c16), size=5)]))
c17 <- seq(from=397,to=451)
set.seed(100)
(c17.sample1 <- sort(c17[sample(1:length(c17), size=5)]))
set.seed(296)
(c17.sample2 <- sort(c17[sample(1:length(c17), size=5)]))
c18 <- seq(from=457,to=513)
rm_c18 <- c(461,463,483,484,485,486,491,504,505)
c18.f <- c18[!(c18 %in% rm_c18)]
set.seed(100)
(c18.sample1 <- sort(c18.f[sample(1:length(c18.f), size=5)]))
set.seed(296)
(c18.sample2 <- sort(c18.f[sample(1:length(c18.f), size=5)]))
c19 <- seq(from=531,to=600)
set.seed(100)
(c19.sample1 <- sort(c19[sample(1:length(c19), size=5)]))
set.seed(296)
(c19.sample2 <- sort(c19[sample(1:length(c19), size=5)]))
c20 <- seq(from=1,to=140)
rm_c20 <- c(8,61,62,68,90,91)
c20.f <- c20[!(c20 %in% rm_c20)]
set.seed(100)
(c20.sample1 <- sort(c20.f[sample(1:length(c20.f), size=5)]))
set.seed(296)
(c20.sample2 <- sort(c20.f[sample(1:length(c20.f), size=5)]))
c1 <- seq(1:30)
rm_c1 <- c(10,11,12,20)
c1.f <- c1[!(c1 %in% rm_c1)]
set.seed(100)
(c1.sample1 <- sort(c1.f[sample(1:length(c1.f), 10)]))
set.seed(296)
(c1.sample2 <- sort(c1.f[sample(1:length(c1.f), 10)]))
c2 <- seq(from=35,to=75)
rm_c2 <- c(39,40,58)
c2.f <- c2[!(c2 %in% rm_c2)]
set.seed(100)
(c2.sample1 <- sort(c2.f[sample(1:length(c2.f), size=10)]))
set.seed(296)
(c2.sample2 <- sort(c2.f[sample(1:length(c2.f), size=10)]))
c3 <- seq(from=76,to=142)
rm_c3 <- seq(from=103,to=106)
c3.f <- c3[!(c3 %in% rm_c3)]
set.seed(100)
(c3.sample1 <- sort(c3.f[sample(1:length(c3.f), size=10)]))
set.seed(296)
(c3.sample2 <- sort(c3.f[sample(1:length(c3.f), size=10)]))
c4 <- seq(from=150,to=235)
rm_c4 <- c(seq(from=186,to=189),202,204,205,207,213)
c4.f <- c4[!(c4 %in% rm_c4)]
set.seed(100)
(c4.sample1 <- sort(c4.f[sample(1:length(c4.f), size=10)]))
set.seed(296)
(c4.sample2 <- sort(c4.f[sample(1:length(c4.f), size=10)]))
c5 <- seq(from=236,to=289)
rm_c5 <- seq(from=240,to=243)
c5.f <- c5[!(c5 %in% rm_c5)]
set.seed(100)
(c5.sample1 <- sort(c5.f[sample(1:length(c5.f), size=10)]))
set.seed(296)
(c5.sample2 <- sort(c5.f[sample(1:length(c5.f), size=10)]))
c6 <- seq(from=290,to=365)
set.seed(100)
(c6.sample1 <- sort(c6[sample(1:length(c6), size=10)]))
set.seed(296)
(c6.sample2 <- sort(c6[sample(1:length(c6), size=10)]))
c7 <- seq(from=366,to=516)
rm_c7 <- c(382,383,410,411,440,441,442,483,490,513,514)
c7.f <- c7[!(c7 %in% rm_c7)]
set.seed(100)
(c7.sample1 <- sort(c7.f[sample(1:length(c7.f), size=10)]))
set.seed(296)
(c7.sample2 <- sort(c7.f[sample(1:length(c7.f), size=10)]))
c8 <- seq(from=524,to=559)
set.seed(100)
(c8.sample1 <- sort(c8[sample(1:length(c8), size=10)]))
set.seed(296)
(c8.sample2 <- sort(c8[sample(1:length(c8), size=10)]))
c9 <- seq(from=559,to=596)
set.seed(100)
(c9.sample1 <- sort(c9[sample(1:length(c9), size=10)]))
set.seed(296)
(c9.sample2 <- sort(c9[sample(1:length(c9), size=10)]))
c10 <- seq(from=1,to=141)
rm_c10 <- c(32,33,34,63,64,128,129,136,137)
c10.f <- c10[!(c10 %in% rm_c10)]
set.seed(100)
(c10.sample1 <- sort(c10.f[sample(1:length(c10.f), size=10)]))
set.seed(296)
(c10.sample2 <- sort(c10.f[sample(1:length(c10.f), size=10)]))
c11 <- seq(from=1,to=53)
rm_c11 <- c(42)
c11.f <- c11[!(c11 %in% rm_c11)]
set.seed(100)
(c11.sample1 <- sort(c11.f[sample(1:length(c11.f), size=10)]))
set.seed(296)
(c11.sample2 <- sort(c11.f[sample(1:length(c11.f), size=10)]))
c12 <- seq(from=64,to=89)
rm_c12 <- c(72,73,74,84,85)
c12.f <- c12[!(c12 %in% rm_c12)]
set.seed(100)
(c12.sample1 <- sort(c12.f[sample(1:length(c12.f), size=10)]))
set.seed(296)
(c12.sample2 <- sort(c12.f[sample(1:length(c12.f), size=10)]))
c13 <- seq(from=94,to=161)
rm_c13 <- c(seq(124:129),148,149)
c13.f <- c13[!(c13 %in% rm_c13)]
set.seed(100)
(c13.sample1 <- sort(c13.f[sample(1:length(c13.f), size=10)]))
set.seed(296)
(c13.sample2 <- sort(c13.f[sample(1:length(c13.f), size=10)]))
c14 <- seq(from=175,to=222)
set.seed(100)
(c14.sample1 <- sort(c14[sample(1:length(c14), size=10)]))
set.seed(296)
(c14.sample2 <- sort(c14[sample(1:length(c14), size=10)]))
c15 <- seq(from=228,to=305)
rm_c15 <- c(261,267,268,270,271,301)
c15.f <- c15[!(c15 %in% rm_c15)]
set.seed(100)
(c15.sample1 <- sort(c15.f[sample(1:length(c15.f), size=10)]))
set.seed(296)
(c15.sample2 <- sort(c15.f[sample(1:length(c15.f), size=10)]))
c16 <- seq(from=310,to=392)
set.seed(100)
(c16.sample1 <- sort(c16[sample(1:length(c16), size=10)]))
set.seed(296)
(c16.sample2 <- sort(c16[sample(1:length(c16), size=10)]))
c17 <- seq(from=397,to=451)
set.seed(100)
(c17.sample1 <- sort(c17[sample(1:length(c17), size=10)]))
set.seed(296)
(c17.sample2 <- sort(c17[sample(1:length(c17), size=10)]))
c18 <- seq(from=457,to=513)
rm_c18 <- c(461,463,483,484,485,486,491,504,505)
c18.f <- c18[!(c18 %in% rm_c18)]
set.seed(100)
(c18.sample1 <- sort(c18.f[sample(1:length(c18.f), size=10)]))
set.seed(296)
(c18.sample2 <- sort(c18.f[sample(1:length(c18.f), size=10)]))
c19 <- seq(from=531,to=600)
set.seed(100)
(c19.sample1 <- sort(c19[sample(1:length(c19), size=10)]))
set.seed(296)
(c19.sample2 <- sort(c19[sample(1:length(c19), size=10)]))
c20 <- seq(from=1,to=140)
rm_c20 <- c(8,61,62,68,90,91)
c20.f <- c20[!(c20 %in% rm_c20)]
set.seed(100)
(c20.sample1 <- sort(c20.f[sample(1:length(c20.f), size=10)]))
set.seed(296)
(c20.sample2 <- sort(c20.f[sample(1:length(c20.f), size=10)]))
c14 <- seq(from=175,to=222)
set.seed(100)
(c14.sample1 <- sort(c14[sample(1:length(c14), size=10)]))
set.seed(296)
(c14.sample2 <- sort(c14[sample(1:length(c14), size=10)]))
167+17
(12*167)/(2*165)
(22*167)/(2*165)
375*0.072
375-27
1550*0.049
1550-76
c11 <- seq(from=1,to=53)
rm_c11 <- c(42)
c11.f <- c11[!(c11 %in% rm_c11)]
length(c11.f)
c13 <- seq(from=94,to=161)
rm_c13 <- c(seq(124:129),148,149)
c13.f <- c13[!(c13 %in% rm_c13)]
length(c13.f)
c14 <- seq(from=175,to=222)
legnth(c14)
length(c14)
c15 <- seq(from=228,to=305)
rm_c15 <- c(261,267,268,270,271,301)
c15.f <- c15[!(c15 %in% rm_c15)]
length(c15.f)
c16 <- seq(from=310,to=392)
length(c16)
1-exp(3.54*15*0.00001+1.35*5*0.00001)
1-exp(-(3.54*15*0.00001+1.35*5*0.00001))
128/2
128-88
exp(log(6.89)+1.96*sqrt(1/49+1/47+1/31+1/205))
47+205
49+31
(-1411.65)/( -7028.2493)
(-1308.94)/(-7028.2493)
(-2127.49)/(-13346.9993)
(-0.01)/(-0.06934245660881175)
# source the functions provided in part 1
source("https://github.com/xuyiqing/lalonde/blob/main/tutorial/functions.R?raw=TRUE")
load("data/lalonde/lalonde.RData")
setwd("/Users/manqingliu/Dropbox/Harvard/Research/DAGawareTransformer_NeurIPS")
load("data/lalonde/lalonde.RData")
ldw_co$treat <- 1
ldw_cps.plus <- rbind.data.frame(ldw_cps, ldw_co)
ldw_psid.plus <- rbind.data.frame(ldw_psid, ldw_co)
# define variables
Y <- "re78"
treat <- "treat"
covar <- c("age", "education", "black", "hispanic", "married",
"nodegree", "re74", "re75", "u74", "u75")
assess_overlap <- function(data, treat, cov, odds = TRUE, num.trees = NULL, seed = 1234, breaks = 50, xlim = NULL, ylim = NULL) {
if(is.null(num.trees))
{
p.forest1 <- probability_forest(X = data[, cov],
Y = as.factor(data[,treat]), seed = seed)
}
else
{
p.forest1 <- probability_forest(X = data[, cov],
Y = as.factor(data[,treat]), seed = seed, num.trees = num.trees)
}
data$ps_assoverlap <- p.forest1$predictions[,2]
#range(lcps.plus$ps)
data$ps_assoverlap[which(abs(data$ps_assoverlap) <= 1e-7)] <- 1e-7
#range(lcps.plus$ps)
if(odds == TRUE)
{
plot_hist(data, "ps_assoverlap", treat, odds = TRUE, breaks = breaks,
density = TRUE, main = "", xlim = xlim, ylim = ylim)
}
else
{
plot_hist(data, "ps_assoverlap", treat, odds = FALSE, breaks = breaks,
density = TRUE, main = "", xlim = c(0, 1), ylim = ylim)
}
return(data)
}
trim <- function(data, ps = "ps_assoverlap", threshold = 0.9) {
sub <- data[which(data[, ps] < threshold), ]
return(sub)
}
ldw_ps <- assess_overlap(data = ldw, treat = treat, cov = covar, odds=FALSE)
summary(ldw_ps$ps_assoverlap)
summary(ldw_psid$u74)
summary(ldw_psid$u75)
ldw_psid <- assess_overlap(data=ldw_psid, treat=treat, cov=covar, odds=FALSE)
ldw_psid_ps <- assess_overlap(data=ldw_psid.plus, treat=treat, cov=covar, odds=FALSE)
ldw_psid_trim <- trim(ldw_psid_ps, threshold = 0.8)
# excluding the experimental controls
ldw_psid_trim_match <- subset(ldw_psid_trim, sample %in% c(1,4) & ps_assoverlap)
# re-estimate propensity scores and employ 1:1 matching
ldw_psid_trim_match <- psmatch(data = ldw_psid_trim_match, Y = "re78", treat = "treat", cov = covar)
ldw_psid_trim_match_ps <- assess_overlap(data = ldw_psid_trim_match, treat = treat, cov = covar, xlim = c(0,1), odds=FALSE)
out4 <- estimate_all(ldw_cps, "re78", "treat", covar)
out5 <- estimate_all(ldw_psid, "re78", "treat", covar)
# RMSE Function in R
rmse <- function(actual, predicted) {
# Ensure the actual and predicted vectors are of the same length
if (length(actual) != length(predicted)) {
stop("Actual and predicted vectors must be of the same length")
}
# Calculate the squared differences
squared_diff <- (actual - predicted) ^ 2
# Calculate the mean of the squared differences
# mean_squared_diff <- mean(squared_diff)
# Take the square root of the mean squared differences to get RMSE
rmse_value <- sqrt(squared_diff)
return(rmse_value)
}
out5$rmse = rmse(rep(1794.34, nrow(out5)), out5$Estimate)
View(out5)
