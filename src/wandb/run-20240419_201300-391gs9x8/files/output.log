
  0%|          | 0/100 [00:00<?, ?it/s]
Shape of t: torch.Size([512, 2])
Shape of y: torch.Size([512, 10])
Shape of t: torch.Size([512, 2])

  1%|          | 1/100 [00:02<04:00,  2.43s/it]
Shape of t: torch.Size([313, 2])
Shape of y: torch.Size([313, 10])
Shape of t: torch.Size([512, 2])
Shape of y: torch.Size([512, 10])
Shape of t: torch.Size([512, 2])
Shape of y: torch.Size([512, 10])
Shape of t: torch.Size([313, 2])

  2%|▏         | 2/100 [00:04<03:23,  2.08s/it]
Shape of t: torch.Size([512, 2])
Shape of y: torch.Size([512, 10])
Shape of t: torch.Size([512, 2])
Shape of y: torch.Size([512, 10])
Shape of t: torch.Size([313, 2])

  3%|▎         | 3/100 [00:06<03:11,  1.97s/it]
Shape of t: torch.Size([512, 2])
Shape of y: torch.Size([512, 10])
Shape of t: torch.Size([512, 2])
Shape of y: torch.Size([512, 10])
Shape of t: torch.Size([313, 2])
Shape of y: torch.Size([313, 10])
Shape of t: torch.Size([512, 2])
  4%|▍         | 4/100 [00:08<03:21,  2.10s/it]
Traceback (most recent call last):
  File "/Users/manqingliu/Dropbox/Harvard/Research/DAGawareTransformer_NeurIPS/src/train.py", line 100, in <module>
    train(model, dataloader, train_config, model_file=args.model_file)
  File "/Users/manqingliu/Dropbox/Harvard/Research/DAGawareTransformer_NeurIPS/src/train.py", line 50, in train
    batch_loss.backward()
  File "/Users/manqingliu/opt/anaconda3/envs/Myenv/lib/python3.10/site-packages/torch/_tensor.py", line 522, in backward
    torch.autograd.backward(
  File "/Users/manqingliu/opt/anaconda3/envs/Myenv/lib/python3.10/site-packages/torch/autograd/__init__.py", line 266, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
